# Generated by Django 5.0.7 on 2024-08-05 18:18

import movies.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Actor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
            options={
                "verbose_name_plural": "actors",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
            options={
                "verbose_name_plural": "countries",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "verbose_name_plural": "genres",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "imdb_match",
                    models.BooleanField(default=False, verbose_name="imdb match"),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=125, unique=True, verbose_name="movie title"
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        validators=[movies.validators.MustRespectDateRanges()],
                        verbose_name="movie published year",
                    ),
                ),
                ("rating", models.FloatField(verbose_name="movie rating")),
                (
                    "description",
                    models.CharField(max_length=1250, verbose_name="movie description"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="media/",
                        verbose_name="movie picture",
                    ),
                ),
                (
                    "director",
                    models.CharField(max_length=250, verbose_name="movie director"),
                ),
                (
                    "writer",
                    models.CharField(max_length=250, verbose_name="movie writer"),
                ),
                (
                    "trailer_url",
                    models.URLField(max_length=350, verbose_name="movie trailer url"),
                ),
                (
                    "actors",
                    models.ManyToManyField(related_name="movies", to="movies.actor"),
                ),
                (
                    "countries_of_origin",
                    models.ManyToManyField(related_name="movies", to="movies.country"),
                ),
                (
                    "genres",
                    models.ManyToManyField(related_name="movies", to="movies.genre"),
                ),
            ],
            options={
                "verbose_name_plural": "movies",
                "ordering": ["title"],
            },
        ),
    ]
